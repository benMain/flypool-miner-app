
version: 2
jobs:
  build:
    docker:
      - image: circleci/node:8.16.0

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: Install Dependencies
          command: |
            npm install
      - save_cache:
          paths:
            - ./node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Build
          command: |
            npm run build:prod
      - run:
          name: Copy Cloudformation
          command: |
            cp cfn/flypool-miner-app.yaml dist/flypool-miner-app/
            cp .circleci/aws_config dist/flypool-miner-app/ 
        
      # - run:
      #     name: Unit Test
      #     command: |
      #       . venv/bnpm run build:prodin/activate
      #       nosetests . --with-coverage --cover-xml --cover-erase --cover-package=bots,handlers,templates,clients --cover-xml-file=coverage.xml
      #       .circleci/coverage-update.sh
      # - store_artifacts:
      #     path: coverage.xml
      #     destination: test-reports
      - persist_to_workspace:
          root: dist
          paths:
            - flypool-miner-app

  deploy:
    docker:
      - image: circleci/python:2.7-jessie
    working_directory: ~/tmp
    steps:
      - run:
          name: Install awscli
          command: sudo pip install awscli
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Check Workspace
          command: ls -ll /tmp/workspace
      - run:
          name: Check Workspace Aagain
          command: ls -ll /tmp/workspace/flypool-miner-app
      - run:
          name: Deploy to S3
          command: |
                mkdir ~/.aws
                mv /tmp/workspace/aws_config ~/.aws/config
                echo "[default]" > ~/.aws/credentials
                echo "aws_access_key_id = ${AWS_ACCESS_KEY_ID}" >> ~/.aws/credentials
                echo "aws_secret_access_key = ${AWS_SECRET_ACCESS_KEY}" >> ~/.aws/credentials
                aws cloudformation deploy --no-fail-on-empty-changeset \
                --region us-east-1 \
                --template-file /tmp/workspace/flypool-miner-app.yaml \
                --stack-name flypool-miner-app \
                --capabilities CAPABILITY_NAMED_IAM
                rm /tmp/workspace/flypool-miner-app.yaml
                rm /tmp/workspace/aws_config
                aws s3 sync /tmp/workspace s3://flypool-miner-app-446226631021-us-east-1/

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
